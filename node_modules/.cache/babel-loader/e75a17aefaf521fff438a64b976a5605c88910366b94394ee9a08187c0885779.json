{"ast":null,"code":"import countries from\"../../database/countryData\";import{getPerson,getPeople}from\"../../database/peopleData\";import{capitalizeFirstLetter}from\"../../utils\";var getQuestion=function getQuestion(){var isMale=Math.floor(Math.random()*2)===0;var isPlural=Math.floor(Math.random()*2)===0;var subject;if(isPlural)subject=getPeople();else subject=getPerson(isMale);var country=countries[Math.floor(Math.random()*countries.length)];var prompt=\"\".concat(country.name,\" / \").concat(subject.firstName);var answer=capitalizeFirstLetter(\"\".concat(subject.possessiveAdjective,\" country is \").concat(country.name,\".\"));return{prompt:prompt,answer:answer};};export default getQuestion;","map":{"version":3,"names":["countries","getPerson","getPeople","capitalizeFirstLetter","getQuestion","isMale","Math","floor","random","isPlural","subject","country","length","prompt","concat","name","firstName","answer","possessiveAdjective"],"sources":["C:/Users/felip/OneDrive/Documentos/Programação/endless-english-exercises/src/activities/001_my-country/possessiveCountry.js"],"sourcesContent":["import countries from \"../../database/countryData\";\r\nimport { getPerson, getPeople } from \"../../database/peopleData\";\r\nimport { capitalizeFirstLetter } from \"../../utils\";\r\n\r\nconst getQuestion = () => {\r\n    const isMale = Math.floor(Math.random() * 2) === 0\r\n    const isPlural = Math.floor(Math.random() * 2) === 0\r\n    let subject; \r\n    if(isPlural)\r\n        subject = getPeople();\r\n    else\r\n        subject = getPerson(isMale);\r\n    const country = countries[Math.floor(Math.random() * countries.length)];\r\n    const prompt = `${country.name} / ${subject.firstName}`\r\n    const answer = capitalizeFirstLetter(`${subject.possessiveAdjective} country is ${country.name}.`);\r\n    return {prompt, answer}\r\n}\r\n\r\nexport default getQuestion;"],"mappings":"AAAA,MAAO,CAAAA,SAAS,KAAM,4BAA4B,CAClD,OAASC,SAAS,CAAEC,SAAS,KAAQ,2BAA2B,CAChE,OAASC,qBAAqB,KAAQ,aAAa,CAEnD,GAAM,CAAAC,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAA,CAAS,CACtB,GAAM,CAAAC,MAAM,CAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,CAAG,CAAC,CAAC,GAAK,CAAC,CAClD,GAAM,CAAAC,QAAQ,CAAGH,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,CAAG,CAAC,CAAC,GAAK,CAAC,CACpD,GAAI,CAAAE,OAAO,CACX,GAAGD,QAAQ,CACPC,OAAO,CAAGR,SAAS,EAAE,CAAC,IAEtB,CAAAQ,OAAO,CAAGT,SAAS,CAACI,MAAM,CAAC,CAC/B,GAAM,CAAAM,OAAO,CAAGX,SAAS,CAACM,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,CAAGR,SAAS,CAACY,MAAM,CAAC,CAAC,CACvE,GAAM,CAAAC,MAAM,IAAAC,MAAA,CAAMH,OAAO,CAACI,IAAI,QAAAD,MAAA,CAAMJ,OAAO,CAACM,SAAS,CAAE,CACvD,GAAM,CAAAC,MAAM,CAAGd,qBAAqB,IAAAW,MAAA,CAAIJ,OAAO,CAACQ,mBAAmB,iBAAAJ,MAAA,CAAeH,OAAO,CAACI,IAAI,MAAI,CAClG,MAAO,CAACF,MAAM,CAANA,MAAM,CAAEI,MAAM,CAANA,MAAM,CAAC,CAC3B,CAAC,CAED,cAAe,CAAAb,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}