{"ast":null,"code":"import { getBool, getRandomElement, capitalizeFirstLetter } from \"../../utils\";\nimport { getPerson, getPeople } from \"../../database/peopleData\";\nimport { getRandomVerb } from \"../../database/verbData\";\nimport { presentContinuousPeriods } from \"../../database/timePeriodData\";\nconst getQuestion = () => {\n  const isPlural = getBool();\n  const isMale = getBool();\n  const subject = isPlural ? getPeople() : getPerson(isMale);\n  const toBe = isPlural ? \"are\" : \"is\";\n  const verb = getRandomVerb();\n  const period = getRandomElement(presentContinuousPeriods);\n  const isAffirmative = getBool();\n  const prompt = `${toBe} ${subject.firstName} ${verb.gerund} ${period}? (${isAffirmative ? 'affirmative' : 'negative'})`;\n  const answer = capitalizeFirstLetter(`${isAffirmative ? 'Yes' : 'No'}, ${subject.subjectivePronoun} ${toBe}.`);\n  return {\n    prompt,\n    answer\n  };\n};\nexport default getQuestion;","map":{"version":3,"names":["getBool","getRandomElement","capitalizeFirstLetter","getPerson","getPeople","getRandomVerb","presentContinuousPeriods","getQuestion","isPlural","isMale","subject","toBe","verb","period","isAffirmative","prompt","firstName","gerund","answer","subjectivePronoun"],"sources":["C:/Users/felip/OneDrive/Documentos/Programação/endless-english-exercises/src/activities/010_its-only-temporary/temporaryShort.js"],"sourcesContent":["import { getBool, getRandomElement, capitalizeFirstLetter } from \"../../utils\"\r\nimport { getPerson, getPeople } from \"../../database/peopleData\"\r\nimport { getRandomVerb } from \"../../database/verbData\"\r\nimport { presentContinuousPeriods } from \"../../database/timePeriodData\"\r\n\r\n\r\nconst getQuestion = () => {\r\n    const isPlural = getBool()\r\n    const isMale = getBool()\r\n    const subject = isPlural ? getPeople() : getPerson(isMale)\r\n    const toBe = isPlural ? \"are\" : \"is\"\r\n    const verb = getRandomVerb()\r\n    const period = getRandomElement(presentContinuousPeriods)\r\n    const isAffirmative = getBool()\r\n\r\n    const prompt = `${toBe} ${subject.firstName} ${verb.gerund} ${period}? (${isAffirmative ? 'affirmative' : 'negative'})`\r\n    const answer = capitalizeFirstLetter(`${isAffirmative ? 'Yes' : 'No'}, ${subject.subjectivePronoun} ${toBe}.`)\r\n\r\n    return { prompt, answer }\r\n}\r\n\r\nexport default getQuestion"],"mappings":"AAAA,SAASA,OAAO,EAAEC,gBAAgB,EAAEC,qBAAqB,QAAQ,aAAa;AAC9E,SAASC,SAAS,EAAEC,SAAS,QAAQ,2BAA2B;AAChE,SAASC,aAAa,QAAQ,yBAAyB;AACvD,SAASC,wBAAwB,QAAQ,+BAA+B;AAGxE,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACtB,MAAMC,QAAQ,GAAGR,OAAO,EAAE;EAC1B,MAAMS,MAAM,GAAGT,OAAO,EAAE;EACxB,MAAMU,OAAO,GAAGF,QAAQ,GAAGJ,SAAS,EAAE,GAAGD,SAAS,CAACM,MAAM,CAAC;EAC1D,MAAME,IAAI,GAAGH,QAAQ,GAAG,KAAK,GAAG,IAAI;EACpC,MAAMI,IAAI,GAAGP,aAAa,EAAE;EAC5B,MAAMQ,MAAM,GAAGZ,gBAAgB,CAACK,wBAAwB,CAAC;EACzD,MAAMQ,aAAa,GAAGd,OAAO,EAAE;EAE/B,MAAMe,MAAM,GAAI,GAAEJ,IAAK,IAAGD,OAAO,CAACM,SAAU,IAAGJ,IAAI,CAACK,MAAO,IAAGJ,MAAO,MAAKC,aAAa,GAAG,aAAa,GAAG,UAAW,GAAE;EACvH,MAAMI,MAAM,GAAGhB,qBAAqB,CAAE,GAAEY,aAAa,GAAG,KAAK,GAAG,IAAK,KAAIJ,OAAO,CAACS,iBAAkB,IAAGR,IAAK,GAAE,CAAC;EAE9G,OAAO;IAAEI,MAAM;IAAEG;EAAO,CAAC;AAC7B,CAAC;AAED,eAAeX,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}