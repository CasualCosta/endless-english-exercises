{"ast":null,"code":"import { getBool, getRandomElement, getRandomNumber, getArticle } from \"../../utils\";\nimport { getPerson, getPeople } from '../../database/peopleData';\nimport { appetizers, mainCourses, sideDishes, desserts, drinks } from \"../../database/mealsData\";\nconst getQuestion = () => {\n  const isMale = getBool();\n  const isPlural = getBool();\n  const subject = isPlural ? getPeople() : getPerson(isMale);\n  const number = getRandomNumber(0, 5);\n  const verb = number === 4 ? \"drink\" : \"eat\";\n  const meals = [appetizers, mainCourses, sideDishes, desserts, drinks];\n  const meal = getRandomElement(meals[number]);\n  const quantifier = meal.countable ? getArticle(meal.name) : \"some\";\n  const prompt = `${subject.firstName} / ${meal.name}`;\n  const answer = `Would ${subject.firstName} like to ${verb} ${quantifier} ${meal.name}?`;\n  return {\n    prompt,\n    answer\n  };\n};\nexport default getQuestion;","map":{"version":3,"names":["getBool","getRandomElement","getRandomNumber","getArticle","getPerson","getPeople","appetizers","mainCourses","sideDishes","desserts","drinks","getQuestion","isMale","isPlural","subject","number","verb","meals","meal","quantifier","countable","name","prompt","firstName","answer"],"sources":["C:/Users/felip/OneDrive/Documentos/Programação/endless-english-exercises/src/activities/018_meal-time/mealTimeInterrogative.js"],"sourcesContent":["import { getBool, getRandomElement, getRandomNumber, getArticle } from \"../../utils\";\r\nimport { getPerson, getPeople } from '../../database/peopleData'\r\nimport { appetizers, mainCourses, sideDishes, desserts, drinks } from \"../../database/mealsData\";\r\n\r\nconst getQuestion = () => {\r\n    const isMale = getBool()\r\n    const isPlural = getBool()\r\n    const subject = isPlural ? getPeople() : getPerson(isMale)\r\n    const number = getRandomNumber(0, 5)\r\n    const verb = number === 4 ? \"drink\" : \"eat\"\r\n    const meals = [appetizers, mainCourses, sideDishes, desserts, drinks]\r\n    const meal = getRandomElement(meals[number])\r\n    const quantifier = meal.countable ? getArticle(meal.name) : \"some\"\r\n\r\n    const prompt = `${subject.firstName} / ${meal.name}`\r\n    const answer = `Would ${subject.firstName} like to ${verb} ${quantifier} ${meal.name}?`\r\n\r\n    return { prompt, answer }\r\n}\r\n\r\nexport default getQuestion"],"mappings":"AAAA,SAASA,OAAO,EAAEC,gBAAgB,EAAEC,eAAe,EAAEC,UAAU,QAAQ,aAAa;AACpF,SAASC,SAAS,EAAEC,SAAS,QAAQ,2BAA2B;AAChE,SAASC,UAAU,EAAEC,WAAW,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,0BAA0B;AAEhG,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACtB,MAAMC,MAAM,GAAGZ,OAAO,EAAE;EACxB,MAAMa,QAAQ,GAAGb,OAAO,EAAE;EAC1B,MAAMc,OAAO,GAAGD,QAAQ,GAAGR,SAAS,EAAE,GAAGD,SAAS,CAACQ,MAAM,CAAC;EAC1D,MAAMG,MAAM,GAAGb,eAAe,CAAC,CAAC,EAAE,CAAC,CAAC;EACpC,MAAMc,IAAI,GAAGD,MAAM,KAAK,CAAC,GAAG,OAAO,GAAG,KAAK;EAC3C,MAAME,KAAK,GAAG,CAACX,UAAU,EAAEC,WAAW,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,MAAM,CAAC;EACrE,MAAMQ,IAAI,GAAGjB,gBAAgB,CAACgB,KAAK,CAACF,MAAM,CAAC,CAAC;EAC5C,MAAMI,UAAU,GAAGD,IAAI,CAACE,SAAS,GAAGjB,UAAU,CAACe,IAAI,CAACG,IAAI,CAAC,GAAG,MAAM;EAElE,MAAMC,MAAM,GAAI,GAAER,OAAO,CAACS,SAAU,MAAKL,IAAI,CAACG,IAAK,EAAC;EACpD,MAAMG,MAAM,GAAI,SAAQV,OAAO,CAACS,SAAU,YAAWP,IAAK,IAAGG,UAAW,IAAGD,IAAI,CAACG,IAAK,GAAE;EAEvF,OAAO;IAAEC,MAAM;IAAEE;EAAO,CAAC;AAC7B,CAAC;AAED,eAAeb,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}