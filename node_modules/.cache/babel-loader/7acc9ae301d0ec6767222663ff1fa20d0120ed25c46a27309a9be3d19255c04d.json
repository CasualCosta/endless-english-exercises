{"ast":null,"code":"import { error } from \"console\";\nexport const capitalizeFirstLetter = string => {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n};\nexport const getArticle = word => {\n  const w = word[0].toLowerCase();\n  if (w === 'a' || w === 'e' || w === 'i' || w === 'o' || w === 'u') return 'an';\n  return 'a';\n};\n\n//array of strings\nexport const getRandomElement = array => {\n  return array[Math.floor(Math.random() * array.length)];\n};\n\n// export const ToWordNumber = (number) => {\n\n//     if(number === 0)\n//         return 'zero'\n//     if(number === 1)\n//         return 'one'\n//     if(number === 2)\n//         return 'two'\n//     if(number === 3)\n//         return 'three'\n//     if(number === 4)\n//         return 'four'\n//     if(number === 5)\n//         return 'five'\n//     if(number === 6)\n//         return 'six'\n//     if(number === 7)\n//         return 'seven'\n//     if(number === 8)\n//         return 'eight'\n//     if(number === 9)\n//         return 'nine'\n//     throw new error('Invalid parameter')\n// }","map":{"version":3,"names":["error","capitalizeFirstLetter","string","charAt","toUpperCase","slice","getArticle","word","w","toLowerCase","getRandomElement","array","Math","floor","random","length"],"sources":["C:/Users/felip/OneDrive/Documentos/Programação/endless-english-exercises/src/utils.js"],"sourcesContent":["import { error } from \"console\";\r\n\r\nexport const capitalizeFirstLetter = (string) => {\r\n    return string.charAt(0).toUpperCase() + string.slice(1)\r\n}\r\n\r\nexport const getArticle = (word) => {\r\n    const w = word[0].toLowerCase();\r\n    if (w === 'a' ||\r\n        w === 'e' ||\r\n        w === 'i' ||\r\n        w === 'o' ||\r\n        w === 'u')\r\n        return 'an'\r\n    return 'a'\r\n}\r\n\r\n//array of strings\r\nexport const getRandomElement = (array) => {\r\n    return array[Math.floor(Math.random() * array.length)]\r\n}\r\n\r\n// export const ToWordNumber = (number) => {\r\n    \r\n//     if(number === 0)\r\n//         return 'zero'\r\n//     if(number === 1)\r\n//         return 'one'\r\n//     if(number === 2)\r\n//         return 'two'\r\n//     if(number === 3)\r\n//         return 'three'\r\n//     if(number === 4)\r\n//         return 'four'\r\n//     if(number === 5)\r\n//         return 'five'\r\n//     if(number === 6)\r\n//         return 'six'\r\n//     if(number === 7)\r\n//         return 'seven'\r\n//     if(number === 8)\r\n//         return 'eight'\r\n//     if(number === 9)\r\n//         return 'nine'\r\n//     throw new error('Invalid parameter')\r\n// }"],"mappings":"AAAA,SAASA,KAAK,QAAQ,SAAS;AAE/B,OAAO,MAAMC,qBAAqB,GAAIC,MAAM,IAAK;EAC7C,OAAOA,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE,GAAGF,MAAM,CAACG,KAAK,CAAC,CAAC,CAAC;AAC3D,CAAC;AAED,OAAO,MAAMC,UAAU,GAAIC,IAAI,IAAK;EAChC,MAAMC,CAAC,GAAGD,IAAI,CAAC,CAAC,CAAC,CAACE,WAAW,EAAE;EAC/B,IAAID,CAAC,KAAK,GAAG,IACTA,CAAC,KAAK,GAAG,IACTA,CAAC,KAAK,GAAG,IACTA,CAAC,KAAK,GAAG,IACTA,CAAC,KAAK,GAAG,EACT,OAAO,IAAI;EACf,OAAO,GAAG;AACd,CAAC;;AAED;AACA,OAAO,MAAME,gBAAgB,GAAIC,KAAK,IAAK;EACvC,OAAOA,KAAK,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGH,KAAK,CAACI,MAAM,CAAC,CAAC;AAC1D,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}