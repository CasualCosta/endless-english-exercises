{"ast":null,"code":"import { getRandomVerb } from \"../../database/verbData\";\nimport { getPerson, getPeople } from \"../../database/peopleData\";\nconst getQuestion = () => {\n  const isPlural = Math.floor(Math.random() * 2);\n  const isMale = Math.floor(Math.random() * 2);\n  const subject = isPlural ? getPeople() : getPerson(isMale);\n  const verb = getRandomVerb();\n  const object = verb.object ? ` ${verb.object}` : '';\n  const isAffirmative = Math.floor(Math.random() * 2);\n  const prompt = `Can ${subject.firstName} ${verb.infinitive}${object}? / ${isAffirmative ? 'Affirmative' : 'Negative'}`;\n  const answer = isAffirmative ? `Yes, ${subject.subjectivePronoun} can.` : `No, ${subject.subjectivePronoun} can't.`;\n  return {\n    prompt,\n    answer\n  };\n};\nexport default getQuestion;","map":{"version":3,"names":["getRandomVerb","getPerson","getPeople","getQuestion","isPlural","Math","floor","random","isMale","subject","verb","object","isAffirmative","prompt","firstName","infinitive","answer","subjectivePronoun"],"sources":["C:/Users/felip/OneDrive/Documentos/Programação/endless-english-exercises/src/activities/003_abilities/abilitiesShortAnswers.js"],"sourcesContent":["import { getRandomVerb } from \"../../database/verbData\"\r\nimport { getPerson, getPeople } from \"../../database/peopleData\";\r\n\r\nconst getQuestion = () => {\r\n    const isPlural = Math.floor(Math.random() * 2);\r\n    const isMale = Math.floor(Math.random() * 2);\r\n    \r\n    const subject = isPlural ?\r\n    getPeople() :\r\n    getPerson(isMale);\r\n    \r\n    const verb = getRandomVerb();\r\n    const object = verb.object ? ` ${verb.object}` : '';\r\n    const isAffirmative = Math.floor(Math.random() * 2);\r\n    \r\n    const prompt = `Can ${subject.firstName} ${verb.infinitive}${object}? / ${isAffirmative ? 'Affirmative' : 'Negative'}`\r\n    const answer = isAffirmative ?\r\n        `Yes, ${subject.subjectivePronoun} can.` :\r\n        `No, ${subject.subjectivePronoun} can't.`\r\n    return { prompt, answer }\r\n}\r\n\r\nexport default getQuestion;"],"mappings":"AAAA,SAASA,aAAa,QAAQ,yBAAyB;AACvD,SAASC,SAAS,EAAEC,SAAS,QAAQ,2BAA2B;AAEhE,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACtB,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,CAAC,CAAC;EAC9C,MAAMC,MAAM,GAAGH,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,CAAC,CAAC;EAE5C,MAAME,OAAO,GAAGL,QAAQ,GACxBF,SAAS,EAAE,GACXD,SAAS,CAACO,MAAM,CAAC;EAEjB,MAAME,IAAI,GAAGV,aAAa,EAAE;EAC5B,MAAMW,MAAM,GAAGD,IAAI,CAACC,MAAM,GAAI,IAAGD,IAAI,CAACC,MAAO,EAAC,GAAG,EAAE;EACnD,MAAMC,aAAa,GAAGP,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,CAAC,CAAC;EAEnD,MAAMM,MAAM,GAAI,OAAMJ,OAAO,CAACK,SAAU,IAAGJ,IAAI,CAACK,UAAW,GAAEJ,MAAO,OAAMC,aAAa,GAAG,aAAa,GAAG,UAAW,EAAC;EACtH,MAAMI,MAAM,GAAGJ,aAAa,GACvB,QAAOH,OAAO,CAACQ,iBAAkB,OAAM,GACvC,OAAMR,OAAO,CAACQ,iBAAkB,SAAQ;EAC7C,OAAO;IAAEJ,MAAM;IAAEG;EAAO,CAAC;AAC7B,CAAC;AAED,eAAeb,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}