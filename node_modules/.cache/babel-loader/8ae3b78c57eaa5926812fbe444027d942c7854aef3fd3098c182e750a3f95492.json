{"ast":null,"code":"const maleNames = [\"Adam\", \"Ashton\", \"Dave\", \"John\", \"Tom\", \"Henry\", \"Mark\", \"Matthew\", \"William\", \"Robert\", \"Carl\", \"Wesley\"];\nconst femaleNames = [\"Mary\", \"Susan\", \"Katherine\", \"Olivia\", \"Pamela\", \"Beatrice\", \"Sandra\", \"Diana\", \"Phoebe\", \"Anna\", \"Christine\", \"Lisa\", \"Vanessa\"];\nexport const GetMale = () => {\n  const type = 'male';\n  const firstName = maleNames[Math.random() * maleNames.length];\n  const personalPronoun = 'he';\n  const objectPronoun = 'him';\n  const possessivePronoun = 'his';\n  return {\n    type,\n    firstName,\n    personalPronoun,\n    objectPronoun,\n    possessivePronoun\n  };\n};\n_c = GetMale;\nexport const GetFemale = () => {\n  const firstName = maleNames[Math.random() * femaleNames.length];\n  const personalPronoun = 'she';\n  const objectPronoun = 'her';\n  const possessivePronoun = 'her';\n  return {\n    firstName,\n    personalPronoun,\n    objectPronoun,\n    possessivePronoun\n  };\n};\n_c2 = GetFemale;\nvar _c, _c2;\n$RefreshReg$(_c, \"GetMale\");\n$RefreshReg$(_c2, \"GetFemale\");","map":{"version":3,"names":["maleNames","femaleNames","GetMale","type","firstName","Math","random","length","personalPronoun","objectPronoun","possessivePronoun","_c","GetFemale","_c2","$RefreshReg$"],"sources":["C:/Users/felip/OneDrive/Documentos/Programação/endless-english-exercises/src/database/peopleData.js"],"sourcesContent":["const maleNames = [\r\n    \"Adam\",\r\n    \"Ashton\",\r\n    \"Dave\",\r\n    \"John\",\r\n    \"Tom\",\r\n    \"Henry\",\r\n    \"Mark\",\r\n    \"Matthew\",\r\n    \"William\",\r\n    \"Robert\",\r\n    \"Carl\",\r\n    \"Wesley\"\r\n]\r\n\r\nconst femaleNames = [\r\n    \"Mary\",\r\n    \"Susan\",\r\n    \"Katherine\",\r\n    \"Olivia\",\r\n    \"Pamela\",\r\n    \"Beatrice\",\r\n    \"Sandra\",\r\n    \"Diana\",\r\n    \"Phoebe\",\r\n    \"Anna\",\r\n    \"Christine\",\r\n    \"Lisa\",\r\n    \"Vanessa\"\r\n]\r\n\r\nexport const GetMale = () => {\r\n    const type = 'male';\r\n    const firstName = maleNames[Math.random() * maleNames.length];\r\n    const personalPronoun = 'he';\r\n    const objectPronoun = 'him';\r\n    const possessivePronoun = 'his';\r\n    return {type, firstName, personalPronoun, objectPronoun, possessivePronoun}\r\n}\r\n\r\nexport const GetFemale = () => {\r\n    const firstName = maleNames[Math.random() * femaleNames.length];\r\n    const personalPronoun = 'she';\r\n    const objectPronoun = 'her';\r\n    const possessivePronoun = 'her';\r\n    return {firstName, personalPronoun, objectPronoun, possessivePronoun}\r\n}\r\n\r\n"],"mappings":"AAAA,MAAMA,SAAS,GAAG,CACd,MAAM,EACN,QAAQ,EACR,MAAM,EACN,MAAM,EACN,KAAK,EACL,OAAO,EACP,MAAM,EACN,SAAS,EACT,SAAS,EACT,QAAQ,EACR,MAAM,EACN,QAAQ,CACX;AAED,MAAMC,WAAW,GAAG,CAChB,MAAM,EACN,OAAO,EACP,WAAW,EACX,QAAQ,EACR,QAAQ,EACR,UAAU,EACV,QAAQ,EACR,OAAO,EACP,QAAQ,EACR,MAAM,EACN,WAAW,EACX,MAAM,EACN,SAAS,CACZ;AAED,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EACzB,MAAMC,IAAI,GAAG,MAAM;EACnB,MAAMC,SAAS,GAAGJ,SAAS,CAACK,IAAI,CAACC,MAAM,EAAE,GAAGN,SAAS,CAACO,MAAM,CAAC;EAC7D,MAAMC,eAAe,GAAG,IAAI;EAC5B,MAAMC,aAAa,GAAG,KAAK;EAC3B,MAAMC,iBAAiB,GAAG,KAAK;EAC/B,OAAO;IAACP,IAAI;IAAEC,SAAS;IAAEI,eAAe;IAAEC,aAAa;IAAEC;EAAiB,CAAC;AAC/E,CAAC;AAAAC,EAAA,GAPYT,OAAO;AASpB,OAAO,MAAMU,SAAS,GAAGA,CAAA,KAAM;EAC3B,MAAMR,SAAS,GAAGJ,SAAS,CAACK,IAAI,CAACC,MAAM,EAAE,GAAGL,WAAW,CAACM,MAAM,CAAC;EAC/D,MAAMC,eAAe,GAAG,KAAK;EAC7B,MAAMC,aAAa,GAAG,KAAK;EAC3B,MAAMC,iBAAiB,GAAG,KAAK;EAC/B,OAAO;IAACN,SAAS;IAAEI,eAAe;IAAEC,aAAa;IAAEC;EAAiB,CAAC;AACzE,CAAC;AAAAG,GAAA,GANYD,SAAS;AAAA,IAAAD,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}