{"ast":null,"code":"import { occupations } from \"../../database/occupationsData\";\nimport { getRandomElement, getBool, getArticle } from \"../../utils\";\nimport { getPerson, getPeople } from \"../../database/peopleData\";\nconst getQuestion = () => {\n  const isPlural = getBool();\n  const verb = isPlural ? 'are' : 'is';\n  const subject = isPlural ? getPeople() : getPerson();\n  const occupationFalse = getRandomElement(occupations);\n  let occupationTrue = getRandomElement(occupations);\n  while (occupationFalse === occupationTrue) occupationTrue = getRandomElement(occupations);\n  const articleFalse = isPlural ? '' : getArticle(occupationFalse) + ' ';\n  const articleTrue = isPlural ? '' : getArticle(occupationTrue) + ' ';\n  const prompt = `${subject.firstName} / ${occupationFalse} / ${occupationTrue}`;\n  const answer = `${subject.firstName} ${verb}n't ${articleFalse}${occupationFalse}${isPlural ? 's' : ''}, ${subject.subjectivePronoun} ${verb} ${articleTrue}${occupationTrue}${isPlural ? 's' : ''}.`;\n  return {\n    prompt,\n    answer\n  };\n};\nexport default getQuestion;","map":{"version":3,"names":["occupations","getRandomElement","getBool","getArticle","getPerson","getPeople","getQuestion","isPlural","verb","subject","occupationFalse","occupationTrue","articleFalse","articleTrue","prompt","firstName","answer","subjectivePronoun"],"sources":["C:/Users/felip/OneDrive/Documentos/Programação/endless-english-exercises/src/activities/005_what-do-you-do/occupationsNegative.js"],"sourcesContent":["import { occupations } from \"../../database/occupationsData\"\r\nimport { getRandomElement, getBool, getArticle } from \"../../utils\"\r\nimport { getPerson, getPeople } from \"../../database/peopleData\"\r\n\r\nconst getQuestion = () => {\r\n    const isPlural = getBool();\r\n    const verb = isPlural ? 'are' : 'is'\r\n    const subject = isPlural ? getPeople() : getPerson();\r\n    const occupationFalse = getRandomElement(occupations)\r\n    let occupationTrue = getRandomElement(occupations)\r\n    while (occupationFalse === occupationTrue)\r\n        occupationTrue = getRandomElement(occupations)\r\n\r\n    const articleFalse = isPlural ? '' : getArticle(occupationFalse) + ' ';\r\n    const articleTrue = isPlural ? '' : getArticle(occupationTrue) + ' ';\r\n    \r\n    const prompt = `${subject.firstName} / ${occupationFalse} / ${occupationTrue}`\r\n    const answer = `${subject.firstName} ${verb}n't ${articleFalse}${occupationFalse}${isPlural ? 's' : ''}, ${subject.subjectivePronoun} ${verb} ${articleTrue}${occupationTrue}${isPlural ? 's' : ''}.`\r\n\r\n    return { prompt, answer }\r\n}\r\n\r\nexport default getQuestion"],"mappings":"AAAA,SAASA,WAAW,QAAQ,gCAAgC;AAC5D,SAASC,gBAAgB,EAAEC,OAAO,EAAEC,UAAU,QAAQ,aAAa;AACnE,SAASC,SAAS,EAAEC,SAAS,QAAQ,2BAA2B;AAEhE,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACtB,MAAMC,QAAQ,GAAGL,OAAO,EAAE;EAC1B,MAAMM,IAAI,GAAGD,QAAQ,GAAG,KAAK,GAAG,IAAI;EACpC,MAAME,OAAO,GAAGF,QAAQ,GAAGF,SAAS,EAAE,GAAGD,SAAS,EAAE;EACpD,MAAMM,eAAe,GAAGT,gBAAgB,CAACD,WAAW,CAAC;EACrD,IAAIW,cAAc,GAAGV,gBAAgB,CAACD,WAAW,CAAC;EAClD,OAAOU,eAAe,KAAKC,cAAc,EACrCA,cAAc,GAAGV,gBAAgB,CAACD,WAAW,CAAC;EAElD,MAAMY,YAAY,GAAGL,QAAQ,GAAG,EAAE,GAAGJ,UAAU,CAACO,eAAe,CAAC,GAAG,GAAG;EACtE,MAAMG,WAAW,GAAGN,QAAQ,GAAG,EAAE,GAAGJ,UAAU,CAACQ,cAAc,CAAC,GAAG,GAAG;EAEpE,MAAMG,MAAM,GAAI,GAAEL,OAAO,CAACM,SAAU,MAAKL,eAAgB,MAAKC,cAAe,EAAC;EAC9E,MAAMK,MAAM,GAAI,GAAEP,OAAO,CAACM,SAAU,IAAGP,IAAK,OAAMI,YAAa,GAAEF,eAAgB,GAAEH,QAAQ,GAAG,GAAG,GAAG,EAAG,KAAIE,OAAO,CAACQ,iBAAkB,IAAGT,IAAK,IAAGK,WAAY,GAAEF,cAAe,GAAEJ,QAAQ,GAAG,GAAG,GAAG,EAAG,GAAE;EAErM,OAAO;IAAEO,MAAM;IAAEE;EAAO,CAAC;AAC7B,CAAC;AAED,eAAeV,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}