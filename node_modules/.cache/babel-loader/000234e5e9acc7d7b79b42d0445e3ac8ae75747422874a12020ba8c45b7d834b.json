{"ast":null,"code":"import countries from \"../database/countryData\";\nimport { GetPerson } from \"../database/peopleData\";\nimport { capitalizeFirstLetter } from \"../utils\";\nexport const getQuestion = () => {\n  const gender = Math.floor(Math.random() * 2) === 0;\n  const subject = GetPerson(gender);\n  const country = countries[Math.floor(Math.random() * countries.length)].name;\n  const prompt = `${country} / ${subject.firstName}`;\n  const answer = capitalizeFirstLetter(`${subject.personalPronoun} is from ${country}.`);\n  return {\n    prompt,\n    answer\n  };\n};","map":{"version":3,"names":["countries","GetPerson","capitalizeFirstLetter","getQuestion","gender","Math","floor","random","subject","country","length","name","prompt","firstName","answer","personalPronoun"],"sources":["C:/Users/felip/OneDrive/Documentos/Programação/endless-english-exercises/src/activities/fromCountry.js"],"sourcesContent":["import countries from \"../database/countryData\";\r\nimport { GetPerson } from \"../database/peopleData\";\r\nimport { capitalizeFirstLetter } from \"../utils\";\r\n\r\nexport const getQuestion = () => {\r\n    const gender = Math.floor(Math.random() * 2) === 0\r\n    const subject = GetPerson(gender);\r\n    const country = countries[Math.floor(Math.random() * countries.length)].name;\r\n    const prompt = `${country} / ${subject.firstName}`\r\n    const answer = capitalizeFirstLetter(`${subject.personalPronoun} is from ${country}.`);\r\n    return {prompt, answer}\r\n}"],"mappings":"AAAA,OAAOA,SAAS,MAAM,yBAAyB;AAC/C,SAASC,SAAS,QAAQ,wBAAwB;AAClD,SAASC,qBAAqB,QAAQ,UAAU;AAEhD,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAC7B,MAAMC,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC;EAClD,MAAMC,OAAO,GAAGP,SAAS,CAACG,MAAM,CAAC;EACjC,MAAMK,OAAO,GAAGT,SAAS,CAACK,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGP,SAAS,CAACU,MAAM,CAAC,CAAC,CAACC,IAAI;EAC5E,MAAMC,MAAM,GAAI,GAAEH,OAAQ,MAAKD,OAAO,CAACK,SAAU,EAAC;EAClD,MAAMC,MAAM,GAAGZ,qBAAqB,CAAE,GAAEM,OAAO,CAACO,eAAgB,YAAWN,OAAQ,GAAE,CAAC;EACtF,OAAO;IAACG,MAAM;IAAEE;EAAM,CAAC;AAC3B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}