{"ast":null,"code":"import { getBool, getRandomElement, getRandomNumber } from \"../../utils\";\nimport { ordinalNumbers } from \"../../database/numbersData\";\nimport { getPerson, getPeople } from '../../database/peopleData';\nimport { regularVerbs } from \"../../database/verbData\";\nconst periods = [\"day\", \"week\", \"month\", \"year\"];\nconst getQuestion = () => {\n  const isMale = getBool();\n  const isPlural = getBool();\n  const subject = isPlural ? getPeople() : getPerson(isMale);\n  const number = ordinalNumbers[getRandomNumber(2, 10)];\n  const period = getRandomElement(periods);\n  const verb = getRandomElement(regularVerbs);\n  const object = getRandomElement(verb.objects);\n  const isAffirmative = getBool();\n  const prompt = `Did ${subject.firstName} ${verb.infinitive} ${object} ${number} ${period}s ago? (${isAffirmative ? \"Affirmative\" : \"Negative\"})`;\n  const answer = `${isAffirmative ? \"Yes\" : \"No\"}, ${subject.subjectivePronoun} did${isAffirmative ? '' : \"n't\"}.`;\n  return {\n    prompt,\n    answer\n  };\n};\nexport default getQuestion;","map":{"version":3,"names":["getBool","getRandomElement","getRandomNumber","ordinalNumbers","getPerson","getPeople","regularVerbs","periods","getQuestion","isMale","isPlural","subject","number","period","verb","object","objects","isAffirmative","prompt","firstName","infinitive","answer","subjectivePronoun"],"sources":["C:/Users/felip/OneDrive/Documentos/Programação/endless-english-exercises/src/activities/023_its_history/historyShort.js"],"sourcesContent":["import { getBool, getRandomElement, getRandomNumber } from \"../../utils\";\r\nimport { ordinalNumbers } from \"../../database/numbersData\";\r\nimport { getPerson, getPeople } from '../../database/peopleData'\r\nimport { regularVerbs } from \"../../database/verbData\";\r\n\r\nconst periods = [\r\n    \"day\",\r\n    \"week\",\r\n    \"month\",\r\n    \"year\"\r\n]\r\n\r\nconst getQuestion = () => {\r\n    const isMale = getBool()\r\n    const isPlural = getBool()\r\n    const subject = isPlural ? getPeople() : getPerson(isMale)\r\n    const number = ordinalNumbers[getRandomNumber(2, 10)]\r\n    const period = getRandomElement(periods)\r\n    const verb = getRandomElement(regularVerbs)\r\n    const object = getRandomElement(verb.objects)\r\n    const isAffirmative = getBool()\r\n\r\n    const prompt = `Did ${subject.firstName} ${verb.infinitive} ${object} ${number} ${period}s ago? (${isAffirmative ? \"Affirmative\" : \"Negative\"})`\r\n    const answer = `${isAffirmative ? \"Yes\" : \"No\"}, ${subject.subjectivePronoun} did${isAffirmative ? '' : \"n't\"}.`\r\n\r\n    return { prompt, answer }\r\n}\r\n\r\nexport default getQuestion"],"mappings":"AAAA,SAASA,OAAO,EAAEC,gBAAgB,EAAEC,eAAe,QAAQ,aAAa;AACxE,SAASC,cAAc,QAAQ,4BAA4B;AAC3D,SAASC,SAAS,EAAEC,SAAS,QAAQ,2BAA2B;AAChE,SAASC,YAAY,QAAQ,yBAAyB;AAEtD,MAAMC,OAAO,GAAG,CACZ,KAAK,EACL,MAAM,EACN,OAAO,EACP,MAAM,CACT;AAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACtB,MAAMC,MAAM,GAAGT,OAAO,EAAE;EACxB,MAAMU,QAAQ,GAAGV,OAAO,EAAE;EAC1B,MAAMW,OAAO,GAAGD,QAAQ,GAAGL,SAAS,EAAE,GAAGD,SAAS,CAACK,MAAM,CAAC;EAC1D,MAAMG,MAAM,GAAGT,cAAc,CAACD,eAAe,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;EACrD,MAAMW,MAAM,GAAGZ,gBAAgB,CAACM,OAAO,CAAC;EACxC,MAAMO,IAAI,GAAGb,gBAAgB,CAACK,YAAY,CAAC;EAC3C,MAAMS,MAAM,GAAGd,gBAAgB,CAACa,IAAI,CAACE,OAAO,CAAC;EAC7C,MAAMC,aAAa,GAAGjB,OAAO,EAAE;EAE/B,MAAMkB,MAAM,GAAI,OAAMP,OAAO,CAACQ,SAAU,IAAGL,IAAI,CAACM,UAAW,IAAGL,MAAO,IAAGH,MAAO,IAAGC,MAAO,WAAUI,aAAa,GAAG,aAAa,GAAG,UAAW,GAAE;EAChJ,MAAMI,MAAM,GAAI,GAAEJ,aAAa,GAAG,KAAK,GAAG,IAAK,KAAIN,OAAO,CAACW,iBAAkB,OAAML,aAAa,GAAG,EAAE,GAAG,KAAM,GAAE;EAEhH,OAAO;IAAEC,MAAM;IAAEG;EAAO,CAAC;AAC7B,CAAC;AAED,eAAeb,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}